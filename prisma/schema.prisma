// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Division {
  id   String @id @default(uuid())
  name String
  user User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("divisions")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String
  name           String?
  isActivated    Boolean   @default(false) @map("is_activated")
  activationLink String    @map("activation_link")
  division       Division? @relation(fields: [divisionId], references: [id])
  divisionId     String?   @map("division_id")
  role           String? @unique
  posts          Post[]
  token          Token?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Post {
  id        String  @id @default(uuid())
  title     String
  content   String?
  published Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String  @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("posts")
}

model Token {
  id           String @id @default(uuid())
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String @unique @map("user_id")
  refreshToken String @unique @map("refresh_token")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

// model Role {
//   id        String   @id @default(uuid())
//   name      String
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
//   User      User?    @relation(fields: [userId], references: [id])
//   userId    String?
// }
